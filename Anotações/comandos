Filtrar conexões por número de porta

O comando ss também permite filtrar o número da porta do soquete ou o número do endereço. Por exemplo, para exibir todas as conexões de soquete com uma porta de destino ou origem do ssh, execute o comando.

# ss -at '( dport = :22 or sport = :22 )'


4. Liste todas as conexões TCP

Para exibir todas as conexões TCP, use a opção -t conforme mostrado.

# ss -t

O arquivo auth.log é responsável por guardar todas as informações de logins e tentativas de logins não sucedidas que foram efetuadas no servidor. Monitorando esse arquivo é possível identificar possíveis invasões, tentativas de brute force e ataques DDoS  que estão ou foram realizadas no servidor.
 # tail -f /var/log/auth.log
 
 
Tunel SSH para acesso Windows via RDP através do Linux.
Vamos supor o seguinte cenário:
Temos acesso ao servidor SSH mas não conseguimos conectar diretamente ao servidor Windows via RDP, pois ele é visto somente pela rede local.

Logo criamos um túnel entre o servidor linux e o Windows para acesso ao serviço RDP.

No servidor linux execute:

# ssh -L 3390:IP_Widnows_RDP:3389 usuario_Linux@IP_Linux -N -L portal local


xfreerdp /v:localhost:3390 /u:usuario_Windows
senha: senha_Windows

// Para enviar comandos de injeção via Post para a backdoor:
# curl -X POST -d "nome=rm -rf /" http://seuservidor:5000/

Este comando poderia potencialmente apagar todos os arquivos no servidor, causando uma perda completa de dados e indisponibilidade do serviço.

# Erro de conexão ao GitHub após configurações de novo Repo
//script
# Start the SSH agent if not already running
if ! pgrep -u "$USER" ssh-agent > /dev/null; then
    eval $(ssh-agent -s)
fi

# Add SSH key to the agent
ssh-add -l | grep "id_rsa" > /dev/null || ssh-add ~/.ssh/id_rsa

//comando para atualizar:
eval $(ssh-agent -s)
ssh-add ~/.ssh/id_apk

# Quando o repo é clonado ele clona como http, é preciso remover:
git remote remove origin   
# Depois é preciso adicionar
git remote add origin git@github.com:"user"/"nome_repo".git  
git branch -M main
git push -u origin main
git remote -v # para exibir as conexões ao Git
git remote set-url origin git@github.com:"user"/"nome_repo".git

# Gerar chave ssh para o GitHub e adicionar em Deploy com acesso Write.
sh-keygen -t rsa -b 4096 -C "email_GitHub" 
# A chave a ser inserida no Deploy no GitHub é a repo.pub
dê um nome para a chave "nome_repo" e depois adicione as configurações em .ssh/config

# modelo arquivo config
---
# Configurações para acessar o repositório MSCHelp
Host github.com-"nome_repo"
    Hostname github.com
    User git
    IdentityFile /home/kali/.ssh/"nome_chave"

---
